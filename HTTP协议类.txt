HTTP协议类

HTTP协议的主要特点
简单快速  灵活  无连接  无状态  

HTTP报文的组成部分
请求报文 
请求行  ： http方法 ，页面地址，http协议，版本
请求头  ：key（value值）**:****
空行  ： 告诉服务端，下一个不再是请求头了，后面当作请求体解析
请求体  ： 
响应报文
状态行  ： http协议，版本，状态码
响应头  ： key（value值）**:****
空行  ： 告诉服务端，下一个不再是响应头了，后面当作响应体解析
响应体  ：比如传回来的html文档

HTTP方法
get：获取资源
post：传输资源
put：更新资源
DELETE：删除资源
HEAD：获取报文首部

post和get区别
get在浏览器回退时是无害的，post会再次提交请求
get产生的url地址是可以被收藏的，而post不能
get请求会被浏览器主动缓存，而post不会，除非主动设置
get请求只能进行url编码，而post支持多种编码
get请求参数会被完整的保存在浏览器历史记录里，而post参数不会被保存
get请求在url中传送的参数是有长度限制的（2kb），而post没有
对参数的数据类型，get只接受ASCII字符，而post没有限制
get 比 post 更不安全，因为参数直接暴露在url上，所以不能用来传递敏感信息
get参数通过url传递，post放在request body中

HTTP状态码
1xx：指示成功 -- 表示请求已接收，继续处理

2xx：成功 -- 表示请求已被成功接收
200：请求成功
206：客户端发送一个带有Range头的get请求，服务器完成了它（主要在视频文件上）
3xx：重定向 -- 要完成请求必须更进一步操作
301：请求页面已经转移到新的url（永久重定向）
302：请求页面临时转到新的url（临时重定向）
304：客户端请求一个文档，但是已经缓存在客户端了，服务器告诉客户原来的缓存还可以用
4xx：客户端错误 -- 请求有语法错误或者请求玩法实现
400：客户端请求语法出错，不能被服务器理解
401：请求未经授权
403：资源禁止被访问
404：请求支援不存在
5xx：服务器错误 -- 服务器未能实现合法请求
500：服务器发送了不在可知的错误，但是原来缓存在客户端的还是可以继续使用
503：请求未完成，可能服务器临时请求过载或者当机，一段时间后可能回复正常

持久连接
HTTP是支持持久连接的（1.1版本才可以，1.0不行）
非持久连接：非持久连接就是（ 请求 -- 应答模式 ）请求完就断开，下次重新请求
持久连接：客户端和服务端的请求持续有效，当出现对服务端后续请求的时候，就不用重新建立链接

管线化

持久连接的情况，某链接上消息类似是于
请求1 -> 响应1 -> 请求2 -> 响应2 -> 请求3 -> 响应3

持久连接的管线化就变成，某个链接上就变成了下面这样
请求1 -> 请求2 -> 请求3 -> 响应1 -> 响应2 -> 响应3
（原理：一次性打包几个请求 发送，接收也是一次性接收所有请求）

管线化是基于持久连接的，所以和持久连接一样，也最少需要1.1版本
只有GET和HEAD 请求可以进行管线化，而POST则有所限制
初次创建连接不能启动管线机制，因为对方可能不支持1.1版本协议
管线化，不会影响响应顺序
服务端必须支持管线化，才可以做这种响应，但不需要服务端也做管线化，支持管线化就可
以
浏览器Chrome 和 Firefox 默认没开启管线化
